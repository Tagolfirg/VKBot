package ru.brainrtp.vk.bot;


import com.petersamokhin.bots.sdk.clients.User;
import com.petersamokhin.bots.sdk.objects.Message;
import jline.console.ConsoleReader;
import ru.brainrtp.vk.bot.config.Configuration;
import ru.brainrtp.vk.bot.config.CoreConfig;
import ru.brainrtp.vk.bot.database.MySQL;
import ru.brainrtp.vk.bot.database.SQLite;
import ru.brainrtp.vk.bot.utils.CC;
import ru.brainrtp.vk.bot.utils.Utils;

import java.io.IOException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

/**
 * –°–æ–∑–¥–∞–Ω–æ 15.12.17
 */

public class Main {

    static User user;
    private static Configuration configuration;
    private static MySQL mysql;
    private static long start;
    static SQLite sql;
    private static ConsoleReader consoleReader;
    private static Boolean enable = true;

    public static void main(String[] args) {
        start = System.currentTimeMillis();

        try {
            (consoleReader = new ConsoleReader()).setExpandEvents(false);
        } catch (IOException e) {
            e.printStackTrace();
        }

        configuration = CoreConfig.getConfig();

        if (configuration.getBoolean("MySQL.Enable")) {
            mysql = new MySQL
                    (
                            configuration.getString("MySQL.Host"),
                            configuration.getString("MySQL.Port"),
                            configuration.getString("MySQL.Username"),
                            configuration.getString("MySQL.Database"),
                            configuration.getString("MySQL.Password")
                    );
        } else {
            sql = new SQLite();
        }
        startConsoleReader();
        user = new User(463447379, "9b5e39b0252fbc4149709aeefdb5097736b2defc1d1d2f5eae496cf7e6be74ae846acfdb668fda4f2d027");
        // 9b5e39b0252fbc4149709aeefdb5097736b2defc1d1d2f5eae496cf7e6be74ae846acfdb668fda4f2d027 - Roman * 463447379
        System.out.println("\n");
        log("–ë–æ—Ç v0.2 –∑–∞–ø—É—â–µ–Ω –∑–∞ " + CC.RED + (System.currentTimeMillis() - start) + " –º—Å." + CC.WHITE + " (vk.com/id" + user.getId() + ")\n" + CC.RESET);
        Listeners.onChat(user);
    }


    private static void log(String args) {
        System.out.println(CC.WHITE + "[" + CC.CYAN + time() + CC.WHITE + "] [" + CC.RED + "–ò–Ω—Ñ–æ" + CC.WHITE + "] > " + CC.RESET + args);
    }

    private static void log(String args, String sender) {
        System.out.println(CC.WHITE + "[" + CC.CYAN + time() + CC.WHITE + "] [" + CC.GREEN + "–ß–∞—Ç" + CC.WHITE + "] " + sender + CC.GREEN + " > " + CC.RESET + args);
    }

    static void log(String args, String sender, int id) {
        System.out.println(CC.WHITE + "[" + CC.CYAN + time() + CC.WHITE + "] [" + CC.GREEN + "–ß–∞—Ç" + CC.WHITE + "] " + sender + "*" + CC.CYAN + id + CC.GREEN + " > " + CC.RESET + args);
    }

    private static String time() {
        DateTimeFormatter ttf = DateTimeFormatter.ofPattern("HH:mm:ss");
        LocalDateTime now = LocalDateTime.now();
        return ttf.format(now);
    }

    private static void startConsoleReader() {
        new Thread(new Runnable() {
            @Override
            public void run() {
                do {
                    try {
                        final String line = consoleReader.readLine("");
                        final String[] command = line.split(" ");
                        final String lowerCase = command[0].toLowerCase();
                        switch (lowerCase) {
                            case "help": {
                                System.out.println(CC.RED + "stop " + CC.RESET + "- –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞");
                                System.out.println(CC.RED + "gc " + CC.RESET + "- –ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–∞–º—è—Ç–∏");
                                System.out.println(CC.RED + "replay " + CC.RESET + "- –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ");
                                System.out.println(CC.RED + "captain " + CC.RESET + "- –î–µ–π—Å—Ç–≤–∏—è —Å–æ —Å—Ç–∞—Ä–æ—Å—Ç–∞–º–∏");
                                System.out.println(CC.BLACK_BOLD_BRIGHT + "debug " + CC.RESET + "- –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å debug");
                                System.out.println(CC.BLACK_BOLD_BRIGHT + "permission [idVK] [permission] " + CC.RESET + "- –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–ª–∑–æ–≤–∞—Ç–µ–ª—é [user] –ø—Ä–∞–≤–∞ [permisson]");
                                break;
                            }

                            case "stop": {
                                log(CC.RED + "–ë–æ—Ç –ø—Ä–æ—Ä–∞–±–æ—Ç–∞–ª " + CC.RESET + Utils.convert((int) ((System.currentTimeMillis() - start)) / 1000));
                                log(CC.RED + "–í—ã–∫–ª—é—á–µ–Ω–∏–µ..." + CC.RESET);
                                Runtime.getRuntime().exit(0);
                            }

                            case "gc": {
                                System.out.println(CC.RED + "–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: " + CC.RESET + Utils.convert((int) ((System.currentTimeMillis() - start)) / 1000));
                                System.out.println(CC.RED + "–ú–∞–∫—Å–∏–º—É–º –ø–∞–º—è—Ç–∏: " + CC.GREEN + Runtime.getRuntime().maxMemory() / 1024L / 1024L + " MB" + CC.RESET);
                                System.out.println(CC.RED + "–î–æ—Å—Ç—É–ø–Ω–æ –ø–∞–º—è—Ç–∏: " + CC.GREEN + Runtime.getRuntime().totalMemory() / 1024L / 1024L + " MB" + CC.RESET);
                                System.out.println(CC.RED + "–°–≤–æ–±–æ–¥–Ω–æ –ø–∞–º—è—Ç–∏: " + CC.GREEN + Runtime.getRuntime().freeMemory() / 1024L / 1024L + " MB" + CC.RESET);
                                System.out.println(CC.RED + "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –ø–∞–º—è—Ç–∏: " + CC.GREEN + (Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory()) / 1024L / 1024L + " MB" + CC.RESET);
                                break;
                            }

                            case "replay": {
                                if (Listeners.latestChat != 0) {
                                    new Message()
                                            .from(user)
                                            .to(Listeners.latestChat)
                                            .text(line.replaceFirst("replay", ""))
                                            .send();
                                    Main.log(line.replaceFirst("replay", ""), "–í—ã");
                                } else {
                                    Main.log(CC.RED + "–û—à–∏–±–∫–∞, –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–∏–∞–ª–æ–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω!");
                                }
                                break;
                            }

                            case "permission": {
                                sql.get("students");
                                try {
                                    if (command.length == 3){
                                        int idVk = Integer.parseInt(command[1]);
                                        if (sql.select(idVk).get(0) != null){

                                            // TODO: –°–¥–µ–ª–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ "–ò–º–µ–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –ø—Ä–∞–≤–∞ –≤ —Å–ø–∏—Å–∫–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–∞–≤ (–Ω—É–∂–µ–Ω –¥–ª—è getGroup –∏ —á—Ç–æ–±—ã –æ—à–∏–±–∫—É –Ω–µ –¥–æ–ø—É—Å–∫–∞—Ç—å)"

                                            // TODO: –ï—Å–ª–∏ –Ω–µ –Ω–∞–ø–∏—Å–∞—Ç—å –±–æ—Ç—É –∏ –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –≤—ã–¥–∞—Ç—å –ø—Ä–∞–≤–∞ - catch (NPE) {...} ü§î –ò—Å–ø—Ä–∞–≤–∏—Ç—å...

                                            /*
                                             –õ–æ–≤–ª—é —Ç–∞–∫—É—é –æ—à–∏–±–∫—É:

                                             permission 147906281 admin #–ö–æ–º–∞–Ω–¥–∞
                                             vk_id  | party | permisson #–í—ã–≤–æ–¥ –∫–æ–ª–æ–Ω–æ–∫
                                             147906281 202 student #–í—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –∏–∑ SQLite
                                             –¢–∞–±–ª–∏—Ü–∞ –≤—ã–≤–µ–¥–µ–Ω–∞ #–û–∫–æ–Ω—á–∞–Ω–∏–µ –≤—ã–≤–æ–¥–∞
                                             –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω! #–û–®–ò–ë–ö–ê!!

                                             P.s –∫–∞–∫ –º–æ–∂–µ—à—å –∑–∞–º–µ—Ç–∏—Ç—å - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å, –Ω–æ –∏ –æ—à–∏–±–∫–∞ —Ç–æ–∂–µ!!
                                            */

                                            sql.update(idVk, command[2]);
                                            log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é " + Student.getStudent(idVk).getFirstName() + " " + Student.getStudent(idVk).getLastName() + "*" + CC.CYAN + idVk + CC.RESET
                                                    + " –≤—ã–¥–∞–Ω–∞ –≥—Ä—É–ø–ø–∞ " + Utils.getGroupColor(command[2]) + CC.RESET);
                                        } else {
                                            System.out.println(CC.RED + "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!" + CC.RESET);
                                        }
                                    }
                                    else if (command.length < 3){
                                        System.out.println(CC.RED + "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: '" + CC.RESET + "permission [user] [permission]" + CC.RED + "'" + CC.RESET);
                                    }
                                    else {
                                        System.out.println(CC.RED + "–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: '" + CC.RESET + "permission [user] [permission]" + CC.RED + "'" + CC.RESET);
                                    }
                                    break;
//                                } catch (Exception ex){
//                                    System.out.println(CC.RED + "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞" + CC.RESET);
//                                    ex.printStackTrace();
                                } catch (NullPointerException ex) {
                                    System.out.println(CC.RED + "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!" + CC.RESET);
                                }
                            }

                            case "captain": {
                                if (command.length == 1) {
                                    System.out.println(CC.RED + "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: '" + CC.RESET + "captain [accept/deny] [idVk]" + CC.RED + "'" + CC.RESET);
                                    break;
                                }

                                if (command[1].equalsIgnoreCase("deny")) {
                                    try {
                                        int idVk = Integer.parseInt(command[2]);
                                        if (sql.select(idVk).get(0) != null) {
                                            sql.delete(idVk);
                                            System.out.println(CC.RED + "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!" + CC.RESET);
                                            new Message()
                                                    .from(user).
                                                    to(idVk)
                                                    .text("–£–≤—ã, –Ω–æ –í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —Å—Ç–∞—Ä–æ—Å—Ç–æ–π " + sql.select(idVk).get(1) + "-–π –≥—Ä—É–ø–ø—ã." +
                                                            "\n–ï—Å–ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
                                                    .send();
                                        }
                                    } catch (Exception ex) {
                                        System.out.println(CC.RED + "–ù–µ–ø—Ä–∞–≤–ª—å–Ω–æ —É–∫–∞–∑–∞–Ω id VK!" + CC.RESET);
                                    }
                                }

                                else if (command[1].equalsIgnoreCase("accept")) {
                                    try {
                                        int idVk = Integer.parseInt(command[2]);
                                        if (sql.select(idVk).get(0) != null) {
                                            sql.update(idVk, true);
                                            Student.getStudent(idVk).setPermission("captain");
                                            System.out.println(CC.GREEN + "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!" + CC.RESET);
                                            new Message()
                                                    .from(user)
                                                    .to(idVk)
                                                    .text("–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Ç–µ–ø–µ—Ä—å –í—ã —Å—Ç–∞—Ä–æ—Å—Ç–∞ " + sql.select(idVk).get(1) + "-–π –≥—Ä—É–ø–ø—ã!" +
                                                            ".\n–¢–µ–ø–µ—Ä—å –≤–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã –∫–æ–º–∞–Ω–¥—ã:" +
                                                            "\n—Å–æ–∑—ã–≤ - —Å–æ–∑–≤–∞—Ç—å –≤—Å–µ—Ö –æ–¥–Ω–æ–≥—Ä—É–ø–ø–Ω–∏–∫–æ–≤" +
                                                            "\n–Ω–æ–≤–æ—Å—Ç—å - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ–º –Ω–æ–≤–æ—Å—Ç—å.")
                                                    .send();
                                        }
                                    } catch (Exception ex) {
                                        System.out.println(CC.RED + "–ù–µ–ø—Ä–∞–≤–ª—å–Ω–æ —É–∫–∞–∑–∞–Ω id VK!" + CC.RESET);
                                    }
                                }

                                else if (command[1].equalsIgnoreCase("delete")) {
                                    try {
                                        int idVk = Integer.parseInt(command[2]);
                                        if (sql.select(idVk).get(0) != null) {
                                            sql.delete(idVk);
                                            System.out.println(CC.RED + "–°—Ç–∞—Ä–æ—Å—Ç–∞ —É–±—Ä–∞–Ω!" + CC.RESET);
                                            new Message()
                                                    .from(user)
                                                    .to(idVk)
                                                    .text("–£–≤—ã, –Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–±—Ä–∞–ª –í–∞—Å –∏–∑ —Å–ø–∏—Å–∫–∞ —Å—Ç–∞—Ä–æ—Å—Ç." +
                                                            "\n–ï—Å–ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
                                                    .send();
                                        }
                                    } catch (Exception ex) {
                                        System.out.println(CC.RED + "–ù–µ–ø—Ä–∞–≤–ª—å–Ω–æ —É–∫–∞–∑–∞–Ω id VK!" + CC.RESET);
                                    }
                                }
                                break;
                            }

                            default: {
                                System.out.println(CC.RED + "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ù–∞–ø–∏—à–∏—Ç–µ '" + CC.RESET + "help" + CC.RED + "'" + CC.RESET);
                                break;
                            }
                        }
                    } catch (Exception ignored) {
                    }
                } while (enable);
            }
        }, "ConsoleThread").start();
    }
}
